# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the .idea directory in version control.
.idea/

# VS Code
.vscode/

# CVisionary specific files and directories

# Database files
*.db
*.sqlite
*.sqlite3
instance/
resumes.db

# Uploaded files (resumes, documents)
uploads/
*.pdf
*.docx
*.doc
*.txt

# Environment variables
.env
.env.local
.env.development
.env.test
.env.production

# API Keys and sensitive data
config.py
secrets.py
credentials.json

# Log files
*.log
logs/
log/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Linux
*~

# Application specific
# Generated reports and exports
reports/
exports/
*.csv
*.xlsx
*.xls

# Cache directories
.cache/
cache/

# Backup files
*.bak
*.backup
*.old

# Node modules (if any frontend dependencies)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Compiled CSS/JS (if using build tools)
static/dist/
static/build/

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Test files
test_uploads/
test_files/
*.test

# Documentation builds
docs/_build/
docs/build/

# Jupyter notebooks (if any)
*.ipynb

# IDE specific
.vscode/
.idea/
*.swp
*.swo
*~

# Docker (if using containers)
.dockerignore
Dockerfile
docker-compose.yml
docker-compose.yaml

# Kubernetes (if using k8s)
*.yaml
*.yml
!docker-compose.yml
!docker-compose.yaml

# Terraform (if using infrastructure as code)
*.tfstate
*.tfstate.*
.terraform/

# Local development
local_settings.py
settings_local.py

# Backup and archive files
*.tar.gz
*.zip
*.rar
*.7z

# Application specific temporary files
temp_uploads/
processed_files/
ocr_cache/

# Machine learning model files (if any)
*.pkl
*.joblib
*.h5
*.hdf5
models/

# Configuration files with sensitive data
config.ini
settings.ini
secrets.ini

# SSL certificates
*.pem
*.key
*.crt
*.csr

# Database dumps
*.sql
*.dump

# Application logs
app.log
error.log
access.log

# Performance profiling
*.prof
*.lprof

# Memory dumps
*.dmp

# Core dumps
core.*

# Temporary Python files
*.pyc
*.pyo
*.pyd
.Python
*.so

# Virtual environment
env/
venv/
ENV/
env.bak/
venv.bak/

# Flask instance folder
instance/

# Flask session files
flask_session/

# SQLite database files
*.db
*.sqlite
*.sqlite3

# MySQL dump files
*.sql

# Redis dump files
dump.rdb

# MongoDB files
*.wt
*.lock

# PostgreSQL files
*.pid
*.log

# Elasticsearch files
data/
logs/

# Application specific
# Resume analysis cache
analysis_cache/
parsed_data_cache/

# AI model cache
ai_cache/
gemini_cache/

# Report generation cache
report_cache/
pdf_cache/

# User session data
sessions/
user_data/

# Backup directories
backups/
backup/

# Development tools
.pytest_cache/
.coverage
htmlcov/

# Documentation
docs/_build/
site/

# Local configuration
local_config.py
dev_config.py
prod_config.py

# Monitoring and logging
monitoring/
logs/
*.log

# Security
*.key
*.pem
*.crt
*.csr
*.p12
*.pfx

# Application specific ignores
# Ignore uploaded resumes but keep the directory structure
uploads/*
!uploads/.gitkeep

# Ignore processed files
processed/
temp_processed/

# Ignore AI model outputs
ai_outputs/
model_outputs/

# Ignore user generated content
user_uploads/
user_data/

# Ignore system specific files
.DS_Store
Thumbs.db
desktop.ini

# Ignore IDE specific files
.vscode/
.idea/
*.swp
*.swo

# Ignore build artifacts
build/
dist/
*.egg-info/

# Ignore test artifacts
.pytest_cache/
.coverage
htmlcov/

# Ignore documentation builds
docs/_build/
site/

# Ignore local development files
local_settings.py
dev_settings.py

# Ignore backup files
*.bak
*.backup
*.old

# Ignore temporary files
*.tmp
*.temp
temp/
tmp/

# Ignore log files
*.log
logs/

# Ignore database files
*.db
*.sqlite
*.sqlite3

# Ignore environment files
.env
.env.local
.env.development
.env.test
.env.production

# Ignore cache directories
.cache/
cache/

# Ignore node modules (if any)
node_modules/

# Ignore compiled files
*.pyc
*.pyo
*.pyd
__pycache__/

# Ignore distribution files
dist/
build/
*.egg-info/

# Ignore virtual environments
env/
venv/
ENV/
env.bak/
venv.bak/

# Ignore IDE files
.vscode/
.idea/
*.swp
*.swo

# Ignore OS files
.DS_Store
Thumbs.db
desktop.ini

# Ignore application specific files
uploads/*
!uploads/.gitkeep
instance/
*.db
.env
logs/
temp/
cache/